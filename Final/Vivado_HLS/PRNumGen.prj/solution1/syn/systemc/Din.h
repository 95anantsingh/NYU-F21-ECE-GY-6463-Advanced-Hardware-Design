// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Din_HH_
#define _Din_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Din : public sc_module {
    // Port declarations 6
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > data_in_read;
    sc_in< sc_lv<3> > in_cnt;
    sc_in< sc_lv<32> > d_in_i;
    sc_out< sc_lv<32> > d_in_o;
    sc_out< sc_logic > d_in_o_ap_vld;


    // Module declarations
    Din(sc_module_name name);
    SC_HAS_PROCESS(Din);

    ~Din();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > tmp_16_fu_86_p2;
    sc_signal< sc_lv<1> > tmp_fu_50_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_60_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_66_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_72_p2;
    sc_signal< sc_lv<32> > tmp_12_fu_126_p3;
    sc_signal< sc_lv<32> > tmp_8_fu_168_p3;
    sc_signal< sc_lv<32> > tmp_s_fu_182_p1;
    sc_signal< sc_lv<32> > tmp_15_fu_78_p3;
    sc_signal< sc_lv<24> > tmp_21_fu_106_p1;
    sc_signal< sc_lv<24> > tmp_11_fu_98_p3;
    sc_signal< sc_lv<8> > tmp_20_fu_116_p4;
    sc_signal< sc_lv<24> > tmp_19_fu_110_p2;
    sc_signal< sc_lv<16> > tmp_18_fu_148_p1;
    sc_signal< sc_lv<16> > tmp_7_fu_140_p3;
    sc_signal< sc_lv<16> > tmp_17_fu_158_p4;
    sc_signal< sc_lv<16> > tmp_14_fu_152_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_10;
    // Thread declarations
    void thread_ap_ready();
    void thread_d_in_o();
    void thread_d_in_o_ap_vld();
    void thread_tmp_11_fu_98_p3();
    void thread_tmp_12_fu_126_p3();
    void thread_tmp_13_fu_72_p2();
    void thread_tmp_14_fu_152_p2();
    void thread_tmp_15_fu_78_p3();
    void thread_tmp_16_fu_86_p2();
    void thread_tmp_17_fu_158_p4();
    void thread_tmp_18_fu_148_p1();
    void thread_tmp_19_fu_110_p2();
    void thread_tmp_20_fu_116_p4();
    void thread_tmp_21_fu_106_p1();
    void thread_tmp_5_fu_60_p2();
    void thread_tmp_7_fu_140_p3();
    void thread_tmp_8_fu_168_p3();
    void thread_tmp_9_fu_66_p2();
    void thread_tmp_fu_50_p2();
    void thread_tmp_s_fu_182_p1();
};

}

using namespace ap_rtl;

#endif
