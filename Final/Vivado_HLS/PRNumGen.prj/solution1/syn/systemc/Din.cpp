// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Din.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Din::ap_const_logic_1 = sc_dt::Log_1;
const bool Din::ap_const_boolean_1 = true;
const sc_lv<1> Din::ap_const_lv1_0 = "0";
const sc_lv<1> Din::ap_const_lv1_1 = "1";
const sc_logic Din::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Din::ap_const_lv3_0 = "000";
const sc_lv<3> Din::ap_const_lv3_1 = "1";
const sc_lv<3> Din::ap_const_lv3_2 = "10";
const sc_lv<3> Din::ap_const_lv3_3 = "11";
const sc_lv<24> Din::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<16> Din::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> Din::ap_const_lv32_18 = "11000";
const sc_lv<32> Din::ap_const_lv32_1F = "11111";
const sc_lv<8> Din::ap_const_lv8_0 = "00000000";
const sc_lv<32> Din::ap_const_lv32_10 = "10000";

Din::Din(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_d_in_o);
    sensitive << ( d_in_i );
    sensitive << ( tmp_16_fu_86_p2 );
    sensitive << ( tmp_fu_50_p2 );
    sensitive << ( tmp_5_fu_60_p2 );
    sensitive << ( tmp_9_fu_66_p2 );
    sensitive << ( tmp_13_fu_72_p2 );
    sensitive << ( tmp_12_fu_126_p3 );
    sensitive << ( tmp_8_fu_168_p3 );
    sensitive << ( tmp_s_fu_182_p1 );

    SC_METHOD(thread_d_in_o_ap_vld);
    sensitive << ( tmp_fu_50_p2 );
    sensitive << ( tmp_5_fu_60_p2 );
    sensitive << ( tmp_9_fu_66_p2 );
    sensitive << ( tmp_13_fu_72_p2 );

    SC_METHOD(thread_tmp_11_fu_98_p3);
    sensitive << ( data_in_read );

    SC_METHOD(thread_tmp_12_fu_126_p3);
    sensitive << ( tmp_20_fu_116_p4 );
    sensitive << ( tmp_19_fu_110_p2 );

    SC_METHOD(thread_tmp_13_fu_72_p2);
    sensitive << ( in_cnt );
    sensitive << ( tmp_fu_50_p2 );
    sensitive << ( tmp_5_fu_60_p2 );
    sensitive << ( tmp_9_fu_66_p2 );

    SC_METHOD(thread_tmp_14_fu_152_p2);
    sensitive << ( tmp_18_fu_148_p1 );
    sensitive << ( tmp_7_fu_140_p3 );

    SC_METHOD(thread_tmp_15_fu_78_p3);
    sensitive << ( data_in_read );

    SC_METHOD(thread_tmp_16_fu_86_p2);
    sensitive << ( d_in_i );
    sensitive << ( tmp_15_fu_78_p3 );

    SC_METHOD(thread_tmp_17_fu_158_p4);
    sensitive << ( d_in_i );

    SC_METHOD(thread_tmp_18_fu_148_p1);
    sensitive << ( d_in_i );

    SC_METHOD(thread_tmp_19_fu_110_p2);
    sensitive << ( tmp_21_fu_106_p1 );
    sensitive << ( tmp_11_fu_98_p3 );

    SC_METHOD(thread_tmp_20_fu_116_p4);
    sensitive << ( d_in_i );

    SC_METHOD(thread_tmp_21_fu_106_p1);
    sensitive << ( d_in_i );

    SC_METHOD(thread_tmp_5_fu_60_p2);
    sensitive << ( in_cnt );
    sensitive << ( tmp_fu_50_p2 );

    SC_METHOD(thread_tmp_7_fu_140_p3);
    sensitive << ( data_in_read );

    SC_METHOD(thread_tmp_8_fu_168_p3);
    sensitive << ( tmp_17_fu_158_p4 );
    sensitive << ( tmp_14_fu_152_p2 );

    SC_METHOD(thread_tmp_9_fu_66_p2);
    sensitive << ( in_cnt );
    sensitive << ( tmp_fu_50_p2 );
    sensitive << ( tmp_5_fu_60_p2 );

    SC_METHOD(thread_tmp_fu_50_p2);
    sensitive << ( in_cnt );

    SC_METHOD(thread_tmp_s_fu_182_p1);
    sensitive << ( data_in_read );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Din_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_in_read, "(port)data_in_read");
    sc_trace(mVcdFile, in_cnt, "(port)in_cnt");
    sc_trace(mVcdFile, d_in_i, "(port)d_in_i");
    sc_trace(mVcdFile, d_in_o, "(port)d_in_o");
    sc_trace(mVcdFile, d_in_o_ap_vld, "(port)d_in_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, tmp_16_fu_86_p2, "tmp_16_fu_86_p2");
    sc_trace(mVcdFile, tmp_fu_50_p2, "tmp_fu_50_p2");
    sc_trace(mVcdFile, tmp_5_fu_60_p2, "tmp_5_fu_60_p2");
    sc_trace(mVcdFile, tmp_9_fu_66_p2, "tmp_9_fu_66_p2");
    sc_trace(mVcdFile, tmp_13_fu_72_p2, "tmp_13_fu_72_p2");
    sc_trace(mVcdFile, tmp_12_fu_126_p3, "tmp_12_fu_126_p3");
    sc_trace(mVcdFile, tmp_8_fu_168_p3, "tmp_8_fu_168_p3");
    sc_trace(mVcdFile, tmp_s_fu_182_p1, "tmp_s_fu_182_p1");
    sc_trace(mVcdFile, tmp_15_fu_78_p3, "tmp_15_fu_78_p3");
    sc_trace(mVcdFile, tmp_21_fu_106_p1, "tmp_21_fu_106_p1");
    sc_trace(mVcdFile, tmp_11_fu_98_p3, "tmp_11_fu_98_p3");
    sc_trace(mVcdFile, tmp_20_fu_116_p4, "tmp_20_fu_116_p4");
    sc_trace(mVcdFile, tmp_19_fu_110_p2, "tmp_19_fu_110_p2");
    sc_trace(mVcdFile, tmp_18_fu_148_p1, "tmp_18_fu_148_p1");
    sc_trace(mVcdFile, tmp_7_fu_140_p3, "tmp_7_fu_140_p3");
    sc_trace(mVcdFile, tmp_17_fu_158_p4, "tmp_17_fu_158_p4");
    sc_trace(mVcdFile, tmp_14_fu_152_p2, "tmp_14_fu_152_p2");
#endif

    }
}

Din::~Din() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Din::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void Din::thread_d_in_o() {
    if (esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_1)) {
        d_in_o = tmp_s_fu_182_p1.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_5_fu_60_p2.read(), ap_const_lv1_1))) {
        d_in_o = tmp_8_fu_168_p3.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_60_p2.read()) && 
                esl_seteq<1,1,1>(tmp_9_fu_66_p2.read(), ap_const_lv1_1))) {
        d_in_o = tmp_12_fu_126_p3.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_60_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_66_p2.read()) && 
                esl_seteq<1,1,1>(tmp_13_fu_72_p2.read(), ap_const_lv1_1))) {
        d_in_o = tmp_16_fu_86_p2.read();
    } else {
        d_in_o = d_in_i.read();
    }
}

void Din::thread_d_in_o_ap_vld() {
    if (((esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_60_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_66_p2.read()) && 
          esl_seteq<1,1,1>(tmp_13_fu_72_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_60_p2.read()) && 
          esl_seteq<1,1,1>(tmp_9_fu_66_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_5_fu_60_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(tmp_fu_50_p2.read(), ap_const_lv1_1))) {
        d_in_o_ap_vld = ap_const_logic_1;
    } else {
        d_in_o_ap_vld = ap_const_logic_0;
    }
}

void Din::thread_tmp_11_fu_98_p3() {
    tmp_11_fu_98_p3 = esl_concat<8,16>(data_in_read.read(), ap_const_lv16_0);
}

void Din::thread_tmp_12_fu_126_p3() {
    tmp_12_fu_126_p3 = esl_concat<8,24>(tmp_20_fu_116_p4.read(), tmp_19_fu_110_p2.read());
}

void Din::thread_tmp_13_fu_72_p2() {
    tmp_13_fu_72_p2 = (!in_cnt.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(in_cnt.read() == ap_const_lv3_3);
}

void Din::thread_tmp_14_fu_152_p2() {
    tmp_14_fu_152_p2 = (tmp_18_fu_148_p1.read() | tmp_7_fu_140_p3.read());
}

void Din::thread_tmp_15_fu_78_p3() {
    tmp_15_fu_78_p3 = esl_concat<8,24>(data_in_read.read(), ap_const_lv24_0);
}

void Din::thread_tmp_16_fu_86_p2() {
    tmp_16_fu_86_p2 = (d_in_i.read() | tmp_15_fu_78_p3.read());
}

void Din::thread_tmp_17_fu_158_p4() {
    tmp_17_fu_158_p4 = d_in_i.read().range(31, 16);
}

void Din::thread_tmp_18_fu_148_p1() {
    tmp_18_fu_148_p1 = d_in_i.read().range(16-1, 0);
}

void Din::thread_tmp_19_fu_110_p2() {
    tmp_19_fu_110_p2 = (tmp_21_fu_106_p1.read() | tmp_11_fu_98_p3.read());
}

void Din::thread_tmp_20_fu_116_p4() {
    tmp_20_fu_116_p4 = d_in_i.read().range(31, 24);
}

void Din::thread_tmp_21_fu_106_p1() {
    tmp_21_fu_106_p1 = d_in_i.read().range(24-1, 0);
}

void Din::thread_tmp_5_fu_60_p2() {
    tmp_5_fu_60_p2 = (!in_cnt.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(in_cnt.read() == ap_const_lv3_1);
}

void Din::thread_tmp_7_fu_140_p3() {
    tmp_7_fu_140_p3 = esl_concat<8,8>(data_in_read.read(), ap_const_lv8_0);
}

void Din::thread_tmp_8_fu_168_p3() {
    tmp_8_fu_168_p3 = esl_concat<16,16>(tmp_17_fu_158_p4.read(), tmp_14_fu_152_p2.read());
}

void Din::thread_tmp_9_fu_66_p2() {
    tmp_9_fu_66_p2 = (!in_cnt.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(in_cnt.read() == ap_const_lv3_2);
}

void Din::thread_tmp_fu_50_p2() {
    tmp_fu_50_p2 = (!in_cnt.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(in_cnt.read() == ap_const_lv3_0);
}

void Din::thread_tmp_s_fu_182_p1() {
    tmp_s_fu_182_p1 = esl_zext<32,8>(data_in_read.read());
}

}

