-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Din is
port (
    ap_ready : OUT STD_LOGIC;
    data_in_read : IN STD_LOGIC_VECTOR (7 downto 0);
    in_cnt : IN STD_LOGIC_VECTOR (2 downto 0);
    d_in_i : IN STD_LOGIC_VECTOR (31 downto 0);
    d_in_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    d_in_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of Din is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal tmp_16_fu_86_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_50_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_60_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_66_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_126_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_168_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_78_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_106_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_11_fu_98_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_20_fu_116_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_110_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_18_fu_148_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_140_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_158_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_152_p2 : STD_LOGIC_VECTOR (15 downto 0);


begin



    ap_ready <= ap_const_logic_1;

    d_in_o_assign_proc : process(d_in_i, tmp_16_fu_86_p2, tmp_fu_50_p2, tmp_5_fu_60_p2, tmp_9_fu_66_p2, tmp_13_fu_72_p2, tmp_12_fu_126_p3, tmp_8_fu_168_p3, tmp_s_fu_182_p1)
    begin
        if ((tmp_fu_50_p2 = ap_const_lv1_1)) then 
            d_in_o <= tmp_s_fu_182_p1;
        elsif (((tmp_5_fu_60_p2 = ap_const_lv1_1) and (tmp_fu_50_p2 = ap_const_lv1_0))) then 
            d_in_o <= tmp_8_fu_168_p3;
        elsif (((tmp_9_fu_66_p2 = ap_const_lv1_1) and (tmp_5_fu_60_p2 = ap_const_lv1_0) and (tmp_fu_50_p2 = ap_const_lv1_0))) then 
            d_in_o <= tmp_12_fu_126_p3;
        elsif (((tmp_13_fu_72_p2 = ap_const_lv1_1) and (tmp_9_fu_66_p2 = ap_const_lv1_0) and (tmp_5_fu_60_p2 = ap_const_lv1_0) and (tmp_fu_50_p2 = ap_const_lv1_0))) then 
            d_in_o <= tmp_16_fu_86_p2;
        else 
            d_in_o <= d_in_i;
        end if; 
    end process;


    d_in_o_ap_vld_assign_proc : process(tmp_fu_50_p2, tmp_5_fu_60_p2, tmp_9_fu_66_p2, tmp_13_fu_72_p2)
    begin
        if (((tmp_fu_50_p2 = ap_const_lv1_1) or ((tmp_5_fu_60_p2 = ap_const_lv1_1) and (tmp_fu_50_p2 = ap_const_lv1_0)) or ((tmp_9_fu_66_p2 = ap_const_lv1_1) and (tmp_5_fu_60_p2 = ap_const_lv1_0) and (tmp_fu_50_p2 = ap_const_lv1_0)) or ((tmp_13_fu_72_p2 = ap_const_lv1_1) and (tmp_9_fu_66_p2 = ap_const_lv1_0) and (tmp_5_fu_60_p2 = ap_const_lv1_0) and (tmp_fu_50_p2 = ap_const_lv1_0)))) then 
            d_in_o_ap_vld <= ap_const_logic_1;
        else 
            d_in_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_98_p3 <= (data_in_read & ap_const_lv16_0);
    tmp_12_fu_126_p3 <= (tmp_20_fu_116_p4 & tmp_19_fu_110_p2);
    tmp_13_fu_72_p2 <= "1" when (in_cnt = ap_const_lv3_3) else "0";
    tmp_14_fu_152_p2 <= (tmp_7_fu_140_p3 or tmp_18_fu_148_p1);
    tmp_15_fu_78_p3 <= (data_in_read & ap_const_lv24_0);
    tmp_16_fu_86_p2 <= (tmp_15_fu_78_p3 or d_in_i);
    tmp_17_fu_158_p4 <= d_in_i(31 downto 16);
    tmp_18_fu_148_p1 <= d_in_i(16 - 1 downto 0);
    tmp_19_fu_110_p2 <= (tmp_21_fu_106_p1 or tmp_11_fu_98_p3);
    tmp_20_fu_116_p4 <= d_in_i(31 downto 24);
    tmp_21_fu_106_p1 <= d_in_i(24 - 1 downto 0);
    tmp_5_fu_60_p2 <= "1" when (in_cnt = ap_const_lv3_1) else "0";
    tmp_7_fu_140_p3 <= (data_in_read & ap_const_lv8_0);
    tmp_8_fu_168_p3 <= (tmp_17_fu_158_p4 & tmp_14_fu_152_p2);
    tmp_9_fu_66_p2 <= "1" when (in_cnt = ap_const_lv3_2) else "0";
    tmp_fu_50_p2 <= "1" when (in_cnt = ap_const_lv3_0) else "0";
    tmp_s_fu_182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_in_read),32));
end behav;
