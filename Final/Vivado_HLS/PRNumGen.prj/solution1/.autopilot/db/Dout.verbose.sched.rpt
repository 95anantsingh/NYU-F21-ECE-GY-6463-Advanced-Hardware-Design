

================================================================
== Vivado HLS Report for 'Dout'
================================================================
* Date:           Fri Dec 24 03:52:50 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        PRNumGen.prj
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     1.188|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%out_cnt_load = load i3* @out_cnt, align 1" [PRNumGen.c:46]   --->   Operation 2 'load' 'out_cnt_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (1.18ns)   --->   "%tmp = icmp eq i3 %out_cnt_load, 0" [PRNumGen.c:46]   --->   Operation 3 'icmp' 'tmp' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%d_out_load = load i32* @d_out, align 4" [PRNumGen.c:47]   --->   Operation 4 'load' 'd_out_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "br i1 %tmp, label %1, label %2" [PRNumGen.c:46]   --->   Operation 5 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.18ns)   --->   "%tmp_5 = icmp eq i3 %out_cnt_load, 1" [PRNumGen.c:48]   --->   Operation 6 'icmp' 'tmp_5' <Predicate = (!tmp)> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %3, label %4" [PRNumGen.c:48]   --->   Operation 7 'br' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (1.18ns)   --->   "%tmp_8 = icmp eq i3 %out_cnt_load, 2" [PRNumGen.c:50]   --->   Operation 8 'icmp' 'tmp_8' <Predicate = (!tmp & !tmp_5)> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "br i1 %tmp_8, label %5, label %6" [PRNumGen.c:50]   --->   Operation 9 'br' <Predicate = (!tmp & !tmp_5)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.18ns)   --->   "%tmp_2 = icmp eq i3 %out_cnt_load, 3" [PRNumGen.c:52]   --->   Operation 10 'icmp' 'tmp_2' <Predicate = (!tmp & !tmp_5 & !tmp_8)> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %7, label %._crit_edge" [PRNumGen.c:52]   --->   Operation 11 'br' <Predicate = (!tmp & !tmp_5 & !tmp_8)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %d_out_load, i32 24, i32 31)" [PRNumGen.c:53]   --->   Operation 12 'partselect' 'tmp_4' <Predicate = (!tmp & !tmp_5 & !tmp_8 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %data_out, i8 %tmp_4) nounwind" [PRNumGen.c:53]   --->   Operation 13 'write' <Predicate = (!tmp & !tmp_5 & !tmp_8 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "br label %._crit_edge" [PRNumGen.c:53]   --->   Operation 14 'br' <Predicate = (!tmp & !tmp_5 & !tmp_8 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "br label %8"   --->   Operation 15 'br' <Predicate = (!tmp & !tmp_5 & !tmp_8)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %d_out_load, i32 16, i32 23)" [PRNumGen.c:51]   --->   Operation 16 'partselect' 'tmp_1' <Predicate = (!tmp & !tmp_5 & tmp_8)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %data_out, i8 %tmp_1) nounwind" [PRNumGen.c:51]   --->   Operation 17 'write' <Predicate = (!tmp & !tmp_5 & tmp_8)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "br label %8" [PRNumGen.c:51]   --->   Operation 18 'br' <Predicate = (!tmp & !tmp_5 & tmp_8)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "br label %9"   --->   Operation 19 'br' <Predicate = (!tmp & !tmp_5)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %d_out_load, i32 8, i32 15)" [PRNumGen.c:49]   --->   Operation 20 'partselect' 'tmp_7' <Predicate = (!tmp & tmp_5)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %data_out, i8 %tmp_7) nounwind" [PRNumGen.c:49]   --->   Operation 21 'write' <Predicate = (!tmp & tmp_5)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "br label %9" [PRNumGen.c:49]   --->   Operation 22 'br' <Predicate = (!tmp & tmp_5)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "br label %10"   --->   Operation 23 'br' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_15 = trunc i32 %d_out_load to i8" [PRNumGen.c:47]   --->   Operation 24 'trunc' 'tmp_15' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %data_out, i8 %tmp_15) nounwind" [PRNumGen.c:47]   --->   Operation 25 'write' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "br label %10" [PRNumGen.c:47]   --->   Operation 26 'br' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "ret void" [PRNumGen.c:54]   --->   Operation 27 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.19ns
The critical path consists of the following:
	'load' operation ('out_cnt_load', PRNumGen.c:46) on static variable 'out_cnt' [4]  (0 ns)
	'icmp' operation ('tmp_8', PRNumGen.c:50) [12]  (1.19 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
